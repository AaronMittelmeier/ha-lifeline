{"version":3,"sources":["components/EnterChat/EnterChat.js","components/ChatBox/Header/Header.js","components/ChatBox/ChatOnline/ChatOnline.js","components/ChatBox/ChatContent/ChatContent.js","components/ChatBox/ChatInput/ChatInput.js","components/ChatBox/ChatBox.js","App.js","serviceWorker.js","index.js"],"names":["EnterChat","setUser","React","useState","status","message","authError","setAuthError","className","onSubmit","e","preventDefault","username","target","elements","value","trim","toUpperCase","slice","toLowerCase","match","length","isLoggedIn","socket","emit","required","placeholder","name","type","Header","version","width","height","viewBox","preserveAspectRatio","id","transform","fill","stroke","d","ChatOnline","online","ChatContent","chatContentElement","messages","ref","map","client","i","date","ChatInput","setInputMessage","sendMessage","inputMessageElement","inputMessage","onChange","handleInputChange","xmlns","ChatBox","user","setOnline","setMessages","useRef","scrollChatToBottom","current","scrollTop","scrollHeight","useEffect","on","focus","Date","getHours","getMinutes","io","App","fluid","xs","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"mSAoDeA,EAhDG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEnB,EAAkCC,IAAMC,SAAS,CAAEC,QAAQ,EAAOC,QAAS,KAA3E,mBAAOC,EAAP,KAAkBC,EAAlB,KA2BA,OACE,sBAAKC,UAAU,QAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,6DACA,sGAEDF,EAAUF,OAAS,qBAAKI,UAAU,cAAf,SAA6B,+BAAOF,EAAUD,YAAwB,KAC1F,qBAAKG,UAAU,aAAf,SACE,uBAAMC,SAjCS,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAWF,EAAEG,OAAOC,SAASF,SAASG,MAAMC,OAAO,GAAGC,cAAgBP,EAAEG,OAAOC,SAASF,SAASG,MAAMC,OAAOE,MAAM,GAAGC,cAG5G,KAAbP,EAKAA,EAASQ,MAAM,MACjBb,EAAa,CAAEH,QAAQ,EAAMC,QAAS,8BAIpCO,EAASS,QAZa,GAaxBd,EAAa,CAAEH,QAAQ,EAAMC,QAAQ,yBAAD,OAbZ,OAiB1BJ,EAAQ,CAAEW,WAAUU,YAAY,IAChCf,EAAa,CAAEH,QAAQ,EAAOC,QAAS,KACvCkB,EAAOC,KAAK,iBAAkB,CAAEZ,cAhB9BL,EAAa,CAAEH,QAAQ,EAAMC,QAAS,wBA2BpC,UACE,uBAAOoB,UAAQ,EAACC,YAAY,YAAYC,KAAK,WAAWC,KAAK,SAC7D,wBAAQA,KAAK,SAASpB,UAAU,cAAhC,uBAGJ,qBAAKA,UAAU,qB,QCMNqB,G,MAjDA,WACb,OACE,qBAAKrB,UAAU,SAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,sBACEsB,QAAQ,MACRC,MAAM,QACNC,OAAO,QACPC,QAAQ,cACRC,oBAAoB,gBACpBC,GAAG,QANL,UAOE,sBACEA,GAAG,WACL,oBACEC,UAAU,iDACVC,KAAK,UACLC,OAAO,OACPH,GAAG,MAJL,UAKE,sBACEI,EAAE,qTACFJ,GAAG,WACL,sBACEI,EAAE,4cACFJ,GAAG,WACL,sBACEI,EAAE,88BACFJ,GAAG,WACL,sBACEI,EAAE,6gBACFJ,GAAG,WACL,sBACEI,EAAE,6eACFJ,GAAG,mBAIX,qBAAK3B,UAAU,wBAAf,SACE,4DAC6B,uBAC3B,mHCjCGgC,EARI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,qBAAKjC,UAAU,cAAf,SACE,4CAAeiC,QCuBNC,EA1BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,mBAAoBC,EAAe,EAAfA,SACzC,OACE,qBAAKC,IAAKF,EAAoBnC,UAAU,eAAxC,SACGoC,EAASE,KAAI,SAACC,EAAQC,GACrB,OACE,8BACmB,OAAhBD,EAAOE,KAAgB,sBAAKzC,UAAU,UAAf,UACtB,qBAAKA,UAAU,mBAAf,SACE,8BACGuC,EAAOnC,SACR,+BAAOmC,EAAOE,YAGlB,qBAAKzC,UAAU,eAAf,SACGuC,EAAO1C,aAEH,qBAAKG,UAAU,OAAf,SACP,+BAAOuC,EAAO1C,aAZR2C,SCeLE,EApBG,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,gBAAiBC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,oBAAqBC,EAAmB,EAAnBA,aAMtE,OACE,qBAAK9C,UAAU,aAAf,SACE,uBAAMC,SAAU2C,EAAhB,UACE,uBAAOP,IAAKQ,EAAqBE,SAAU,SAAC7C,GAAD,OAPvB,SAAAA,GACxByC,EAAgBzC,EAAEG,OAAOE,OAM6ByC,CAAkB9C,IAAIK,MAAOuC,EAAc7B,UAAQ,EAACG,KAAK,OAAOD,KAAK,UAAUD,YAAY,yBAC7I,iCACE,qBAAKK,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYI,KAAK,OAAOoB,MAAM,6BAAlE,SACE,sBAAMlB,EAAE,meAAmeF,KAAK,sBCgD7eqB,G,MAtDC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,EAA4BzD,IAAMC,SAAS,GAA3C,mBAAOsC,EAAP,KAAemB,EAAf,KACA,EAAwC1D,IAAMC,SAAS,IAAvD,mBAAOmD,EAAP,KAAqBH,EAArB,KACA,EAAgCjD,IAAMC,SAAS,IAA/C,mBAAOyC,EAAP,KAAiBiB,EAAjB,KAEMlB,EAAqBzC,IAAM4D,OAAO,MAClCT,EAAsBnD,IAAM4D,OAAO,MAUnCC,EAAqB,SAACpB,GAAD,OAAwBA,EAAmBqB,QAAQC,UAAYtB,EAAmBqB,QAAQE,cAuBrH,OArBAhE,IAAMiE,WAAU,WACd5C,EAAO6C,GAAG,gBAAgB,YAAkC,IAA/B/D,EAA8B,EAA9BA,QAASO,EAAqB,EAArBA,SAAUqC,EAAW,EAAXA,KAC9CY,GAAY,SAAAjB,GAAQ,4BAASA,GAAT,CAAmB,CAAEvC,UAASO,WAAUqC,aAC5Dc,EAAmBpB,GACnBU,EAAoBW,QAAQK,QAC5BlB,EAAgB,OAGlB5B,EAAO6C,GAAG,kBAAkB,YAA2B,IAAxBxD,EAAuB,EAAvBA,SAAU6B,EAAa,EAAbA,OACvCmB,EAAUnB,GACVoB,GAAY,SAAAjB,GAAQ,4BAASA,GAAT,CAAmB,CAAEvC,QAAQ,GAAD,OAAKO,EAAL,YAAyBA,WAAUqC,KAAM,WACzFc,EAAmBpB,MAGrBpB,EAAO6C,GAAG,qBAAqB,YAA2B,IAAxBxD,EAAuB,EAAvBA,SAAU6B,EAAa,EAAbA,OAC1CmB,EAAUnB,GACVoB,GAAY,SAAAjB,GAAQ,4BAASA,GAAT,CAAmB,CAAEvC,QAAQ,GAAD,OAAKO,EAAL,UAAuBA,WAAUqC,KAAM,WACvFc,EAAmBpB,QAEpB,CAACkB,EAAaD,IAGf,sBAAKpD,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYiC,OAAQA,IACpB,cAAC,EAAD,CAAaE,mBAAoBA,EAAoBC,SAAUA,IAC/D,cAAC,EAAD,CACES,oBAAqBA,EACrBC,aAAcA,EACdH,gBAAiBA,EACjBC,YAxCc,SAAA1C,GAClBA,EAAEC,iBACF,IAAMN,EAAUK,EAAEG,OAAOC,SAAST,QAC5B4C,EAAO,IAAIqB,KAEjB/C,EAAOC,KAAK,eAAgB,CAAEnB,QAASA,EAAQU,MAAOH,SAAU+C,EAAK/C,SAAUqC,KAAK,GAAD,OAAKA,EAAKsB,WAAV,YAAwB,WAAKtB,EAAKuB,cAAgBtD,OAAO,cCf1IK,EAASkD,MAgBAC,EAdH,WACV,MAAwBxE,IAAMC,SAAS,CAAES,SAAU,GAAIU,YAAY,IAAnE,mBAAOqC,EAAP,KAAa1D,EAAb,KAEA,OACE,cAAC,OAAD,CAAM0E,OAAK,EAAX,SACE,cAAC,MAAD,UACE,cAAC,MAAD,CAAKC,GAAI,GAAT,SAC4B,KAAzBjB,EAAK/C,SAASI,QAAiB2C,EAAKrC,WAAa,cAAC,EAAD,CAASqC,KAAMA,IAAW,cAAC,EAAD,CAAW1D,QAASA,WCHtF4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5D,MACvB,2D,YCVN6D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMxF,c","file":"static/js/main.99abb931.chunk.js","sourcesContent":["import React from 'react';\nimport { socket } from '../../App'\nimport './EnterChat.scss'\n\nconst EnterChat = ({ setUser }) => {\n\n  const [authError, setAuthError] = React.useState({ status: false, message: '' })\n\n  const loginHandler = e => {\n    e.preventDefault()\n    const username = e.target.elements.username.value.trim()[0].toUpperCase() + e.target.elements.username.value.trim().slice(1).toLowerCase()\n    const maxUsernameLength = 20\n\n    if (username === '') {\n      setAuthError({ status: true, message: '*Invalid username!' })\n      return\n    }\n\n    if (username.match(/\\d/)) {\n      setAuthError({ status: true, message: '*Numbers are not allowed!' })\n      return\n    }\n\n    if (username.length >= maxUsernameLength) {\n      setAuthError({ status: true, message: `*Max username length: ${maxUsernameLength}` })\n      return\n    }\n\n    setUser({ username, isLoggedIn: true })\n    setAuthError({ status: false, message: '' })\n    socket.emit('user:connected', { username })\n  }\n\n  return (\n    <div className=\"enter\">\n      <div className=\"enter-heading\">\n        <h1>Heroin Anonymous - LifeLine</h1>\n        <p>An anonymous chat application for the incomprehensibly demoralized</p>\n      </div>\n      {authError.status ? <div className='enter-error'><span>{authError.message}</span></div> : null}\n      <div className=\"enter-form\">\n        <form onSubmit={loginHandler}>\n          <input required placeholder='Your name' name='username' type=\"text\"/>\n          <button type='submit' className='btn-primary'>Join</button>\n        </form>\n      </div>\n      <div className=\"enter-footer\">\n      </div>\n    </div>\n  )\n}\n\nexport default EnterChat","import React from 'react';\nimport './Header.scss'\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header-title\">\n        <div className=\"header-title__logo\">\n          <svg\n            version=\"1.0\"\n            width=\"100px\"\n            height=\"100px\"\n            viewBox=\"0 0 100 100\"\n            preserveAspectRatio=\"xMidYMid meet\"\n            id=\"svg44\">\n            <defs\n              id=\"defs48\" />\n            <g\n              transform=\"matrix(0.03333333,0,0,-0.03333333,0,74.999982)\"\n              fill=\"#000000\"\n              stroke=\"none\"\n              id=\"g42\">\n              <path\n                d=\"M 0,1125 V 0 H 1125 2250 V 1125 2250 H 1125 0 Z m 1349,975 c 166,-44 271,-96 411,-207 189,-149 321,-378 360,-625 17,-105 8,-301 -18,-400 C 2006,510 1740,238 1382,134 1022,30 627,132 359,400 223,535 139,686 84,890 c -27,99 -25,358 4,462 50,182 123,316 240,439 173,183 346,278 588,324 113,21 322,14 433,-15 z\"\n                id=\"path32\" />\n              <path\n                d=\"M 927,2084 C 768,2055 633,1999 507,1910 117,1631 -16,1131 186,701 242,581 299,503 397,409 495,315 547,280 663,225 904,112 1155,94 1400,172 c 435,138 717,536 697,983 -12,284 -130,523 -345,703 -103,85 -190,136 -307,178 -175,62 -350,79 -518,48 z m 401,-204 c 320,-90 545,-351 582,-676 C 1936,970 1860,745 1696,573 1571,441 1430,366 1248,334 1078,304 915,328 755,405 556,501 406,674 340,885 c -31,98 -38,282 -16,391 64,316 313,558 640,620 96,18 269,11 364,-16 z\"\n                id=\"path34\" />\n              <path\n                d=\"M 1000,1869 C 907,1855 752,1799 684,1754 608,1705 494,1589 451,1517 195,1088 402,537 873,391 c 261,-80 533,-27 739,144 124,103 218,259 253,418 21,94 16,279 -9,369 -54,195 -211,384 -392,472 -138,68 -319,97 -464,75 z M 870,1546 v -45 l -42,-3 -43,-3 -3,-97 -3,-98 h 111 111 l -3,98 -3,97 -42,3 -43,3 v 45 44 h 170 170 v -45 -45 h -40 c -24,0 -43,-5 -45,-13 -3,-7 -4,-123 -3,-257 l 3,-245 84,198 84,198 34,-3 c 34,-3 35,-4 92,-143 125,-302 183,-434 199,-448 9,-8 28,-17 42,-19 22,-3 25,-9 28,-46 l 3,-43 -158,3 -158,3 v 40 c 0,38 2,40 33,43 37,4 36,0 4,79 l -17,43 h -96 -95 l -22,-53 c -12,-29 -22,-56 -22,-60 0,-4 16,-7 35,-7 35,0 35,0 35,-45 v -46 l -132,3 -133,3 v 40 c 0,35 3,40 25,43 14,2 31,9 39,15 11,10 51,89 51,103 0,2 -47,4 -105,4 H 910 v 44 45 l 43,3 42,3 3,103 3,102 H 890 780 V 1086 981 l 43,-3 c 42,-3 42,-3 45,-46 l 3,-42 -173,2 -173,3 v 40 c 0,39 1,40 40,43 22,2 43,9 47,15 10,16 10,478 0,494 -4,6 -25,13 -47,15 -36,3 -40,6 -43,31 -7,57 -7,57 178,57 h 170 z\"\n                id=\"path36\" />\n              <path\n                d=\"m 590,1538 c 62,-18 60,-7 60,-299 0,-265 0,-268 -22,-283 -12,-9 -33,-16 -46,-16 -13,0 -20,-4 -17,-10 4,-6 60,-10 136,-10 79,0 129,4 129,10 0,6 -11,10 -25,10 -14,0 -34,9 -45,20 -18,18 -20,33 -20,145 v 125 h 143 c 79,0 146,-2 148,-4 2,-2 2,-63 -1,-136 -5,-139 -9,-150 -57,-150 -13,0 -23,-4 -23,-10 0,-17 187,-13 193,4 3,7 0,19 -6,25 -8,8 -13,89 -15,267 -4,287 -2,294 65,312 31,8 11,10 -102,10 -91,0 -130,-3 -112,-8 55,-17 57,-23 57,-156 V 1260 H 885 740 v 118 c 0,132 5,145 60,160 27,8 3,10 -105,10 -110,0 -132,-2 -105,-10 z\"\n                id=\"path38\" />\n              <path\n                d=\"m 1344,1314 c -117,-281 -230,-534 -247,-551 -11,-13 -29,-23 -39,-23 -10,0 -18,-4 -18,-10 0,-6 38,-10 95,-10 57,0 95,4 95,10 0,6 -11,10 -24,10 -48,0 -52,24 -19,103 l 29,72 122,3 121,3 22,-48 c 29,-65 31,-126 4,-131 -11,-2 -24,-8 -30,-13 -5,-5 40,-9 113,-9 75,0 122,4 122,10 0,6 -8,10 -17,10 -40,1 -63,36 -126,190 -91,224 -169,406 -177,414 -6,6 -16,-6 -26,-30 z m 92,-336 c 5,-16 -4,-18 -95,-18 -56,0 -101,2 -101,4 0,2 16,42 36,88 19,45 42,99 50,118 l 15,35 45,-105 c 24,-58 47,-113 50,-122 z\"\n                id=\"path40\" />\n            </g>\n          </svg>\n        </div>\n        <div className=\"header-title__heading\">\n          <p>\n            Heroin Anonymous - LifeLine<br/>\n            <span>An anonymous chat application for the incomprehensibly demoralized </span>\n          </p>\n        </div>\n      </div>\n  \n    </div>\n  )\n}\n\nexport default Header","import React from \"react\"\n\nconst ChatOnline = ({ online }) => {\n  return (\n    <div className='chat-online'>\n      <span>Online: {online}</span>\n    </div>\n  )\n}\n\nexport default ChatOnline","import React from 'react'\n\nconst ChatContent = ({ chatContentElement, messages }) => {\n  return (\n    <div ref={chatContentElement} className=\"chat-content\">\n      {messages.map((client, i) => {\n        return (\n          <div key={i}>\n            {client.date !== null ? <div className='message'>\n              <div className=\"message-username\">\n                <p>\n                  {client.username}\n                  <span>{client.date}</span>\n                </p>\n              </div>\n              <div className=\"message-text\">\n                {client.message}\n              </div>\n            </div> : <div className='info'>\n              <span>{client.message}</span>\n            </div>}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ChatContent","import React from \"react\"\n\nconst ChatInput = ({ setInputMessage, sendMessage, inputMessageElement, inputMessage }) => {\n\n  const handleInputChange = e => {\n    setInputMessage(e.target.value)\n  }\n\n  return (\n    <div className=\"chat-input\">\n      <form onSubmit={sendMessage}>\n        <input ref={inputMessageElement} onChange={(e) => handleInputChange(e)} value={inputMessage} required type=\"text\" name='message' placeholder='Type your message...'/>\n        <button>\n          <svg width=\"25\" height=\"23\" viewBox=\"0 0 25 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M23.5111 9.27032L3.34053 0.900689C2.49077 0.548052 1.53076 0.703179 0.835207 1.30533C0.139651 1.90757 -0.151267 2.8355 0.0760766 3.72696L1.87144 10.7676H10.6618C11.0663 10.7676 11.3942 11.0955 11.3942 11.5001C11.3942 11.9045 11.0663 12.2325 10.6618 12.2325H1.87144L0.0760766 19.2731C-0.151267 20.1646 0.139602 21.0925 0.835207 21.6947C1.53218 22.2981 2.49229 22.4513 3.34058 22.0994L23.5112 13.7298C24.4295 13.3487 25 12.4943 25 11.5001C25 10.5058 24.4295 9.65132 23.5111 9.27032Z\" fill=\"#0070F3\"/>\n          </svg>\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChatInput","import React from 'react';\nimport { socket } from '../../App'\nimport Header from './Header/Header'\nimport ChatOnline from \"./ChatOnline/ChatOnline\";\nimport ChatContent from './ChatContent/ChatContent'\nimport ChatInput from \"./ChatInput/ChatInput\"\nimport './ChatBox.scss'\n\nconst ChatBox = ({ user }) => {\n  const [online, setOnline] = React.useState(0)\n  const [inputMessage, setInputMessage] = React.useState('')\n  const [messages, setMessages] = React.useState([])\n\n  const chatContentElement = React.useRef(null)\n  const inputMessageElement = React.useRef(null)\n\n  const sendMessage = e => {\n    e.preventDefault()\n    const message = e.target.elements.message\n    const date = new Date()\n\n    socket.emit('chat:message', { message: message.value, username: user.username, date: `${date.getHours()}:${(`0${date.getMinutes()}`).slice(-2)}` })\n  }\n\n  const scrollChatToBottom = (chatContentElement) => chatContentElement.current.scrollTop = chatContentElement.current.scrollHeight\n\n  React.useEffect(() => {\n    socket.on('chat:message', ({ message, username, date }) => {\n      setMessages(messages => ([...messages, { message, username, date }]))\n      scrollChatToBottom(chatContentElement)\n      inputMessageElement.current.focus()\n      setInputMessage('')\n    })\n\n    socket.on('user:connected', ({ username, online }) => {\n      setOnline(online)\n      setMessages(messages => ([...messages, { message: `${username} joined!`, username, date: null }]))\n      scrollChatToBottom(chatContentElement)\n    })\n\n    socket.on('user:disConnected', ({ username, online }) => {\n      setOnline(online)\n      setMessages(messages => ([...messages, { message: `${username} left!`, username, date: null }]))\n      scrollChatToBottom(chatContentElement)\n    })\n  }, [setMessages, setOnline]);\n\n  return (\n    <div className=\"chat\">\n      <Header />\n      <ChatOnline online={online} />\n      <ChatContent chatContentElement={chatContentElement} messages={messages} />\n      <ChatInput\n        inputMessageElement={inputMessageElement}\n        inputMessage={inputMessage}\n        setInputMessage={setInputMessage}\n        sendMessage={sendMessage}\n      />\n    </div>\n  )\n}\n\nexport default ChatBox","import React from 'react';\nimport io from 'socket.io-client'\nimport { Grid, Row, Col } from \"react-flexbox-grid\"\nimport EnterChat from './components/EnterChat/EnterChat'\nimport ChatBox from './components/ChatBox/ChatBox'\n\nconst socket = io()\n\nconst App = () => {\n  const [user, setUser] = React.useState({ username: '', isLoggedIn: false })\n\n  return (\n    <Grid fluid>\n      <Row>\n        <Col xs={12}>\n          {user.username.trim() !== '' && user.isLoggedIn ? <ChatBox user={user} /> : <EnterChat setUser={setUser} />}\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default App\n\nexport { socket }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'normalize.css'\nimport './styles/global.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}